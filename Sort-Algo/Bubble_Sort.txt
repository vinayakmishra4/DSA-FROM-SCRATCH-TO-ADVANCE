--------------------------------------------------
                  🔄 BUBBLE SORTING ALGORITHM 🔄
--------------------------------------------------

📌 Basic Principle of Bubble Sort Algorithm:

- Start from the beginning of the array.
- Compare adjacent elements and swap them if they are in the wrong order.
- Repeat the process for all elements.
- After each pass, the largest unsorted element "bubbles up" to its correct position.

🧠 Working Principle of Bubble Sort Algorithm (Example):

Given array: [5, 2, 8, 1, 9]

- Pass 1:
  - Compare 5 and 2 → swap → [2, 5, 8, 1, 9]
  - Compare 5 and 8 → no swap
  - Compare 8 and 1 → swap → [2, 5, 1, 8, 9]
  - Compare 8 and 9 → no swap

- Pass 2:
  - Compare 2 and 5 → no swap
  - Compare 5 and 1 → swap → [2, 1, 5, 8, 9]
  - Compare 5 and 8 → no swap

- Pass 3:
  - Compare 2 and 1 → swap → [1, 2, 5, 8, 9]
  - Remaining elements are already sorted

✅ Final sorted array: [1, 2, 5, 8, 9]

--------------------------------------------------
                      💻 PSEUDOCODE
--------------------------------------------------

Procedure BubbleSort(arr, n)
    For i from 0 to n - 2 do
        For j from 0 to n - 2 - i do
            If arr[j] > arr[j + 1] then
                Swap arr[j] and arr[j + 1]
            End If
        End For
    End For
End Procedure

--------------------------------------------------
                 ⏱️ TIME COMPLEXITY
--------------------------------------------------

- Best Case:     O(n)        ➤ When the array is already sorted.
- Average Case:  O(n²)       ➤ When the array is randomly ordered.
- Worst Case:    O(n²)       ➤ When the array is reverse sorted.

--------------------------------------------------
                     🙏 THANK YOU 🙏
--------------------------------------------------
